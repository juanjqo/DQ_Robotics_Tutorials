from dqrobotics import *
from dqrobotics.interfaces.vrep  import DQ_VrepInterface
from dqrobotics.robot_control import ControlObjective
from dqrobotics.robot_control import DQ_PseudoinverseController

controller = DQ_PseudoinverseController(franka)
controller.set_gain(0.5)
controller.set_damping(0.05)
controller.set_control_objective(ControlObjective.Translation)
controller.set_stability_threshold(0.00001)

while not controller.system_reached_stable_region():
    q = vi.get_joint_positions(jointnames)
    vi.set_object_pose("ReferenceFrame", franka.fkm(q))
    u = controller.compute_setpoint_control_signal(q, vec4(xdesired.translation()))
    print("error: ", LA.norm(controller.get_last_error_signal()))
    print("Iteration: ", i)
    print("Is stable?: ", controller.system_reached_stable_region())
    vi.set_joint_target_velocities(jointnames, u)
    print("q_dot: ", vi.get_joint_velocities(jointnames))
    i=i+1
    vi.trigger_next_simulation_step()