#include <dqrobotics/DQ.h>
#include <dqrobotics/interfaces/vrep/DQ_VrepInterface.h>
#include <dqrobotics/robots/FrankaEmikaPandaRobot.h>
#include <dqrobotics/robot_control/DQ_PseudoinverseController.h>
#include <thread>

int main()
{
    DQ_VrepInterface vi;
    vi.connect(19997,100,10);
    vi.set_synchronous(true);
    vi.start_simulation();
    std::this_thread::sleep_for(std::chrono::milliseconds(100));

    std::vector<std::string>
    jointnames ={"Franka_joint1", "Franka_joint2",
                 "Franka_joint3", "Franka_joint4",
                 "Franka_joint5", "Franka_joint6",
                 "Franka_joint7"};

    auto robot = FrankaEmikaPandaRobot::kinematics();
    DQ_PseudoinverseController controller
    (std::static_pointer_cast<DQ_Kinematics>
    (std::make_shared<DQ_SerialManipulatorMDH>(robot)));

    controller.set_gain(0.5);
    controller.set_damping(0.01);
    controller.set_control_objective(DQ_robotics::Translation);
    controller.set_stability_threshold(0.00001);
    auto pd =  vec4(0.2*i_ + 0.3*j_ + 0.3*k_);

    while (not controller.system_reached_stable_region())
    {
        auto q = vi.get_joint_positions(jointnames);
        auto u = controller.compute_setpoint_control_signal(q, pd);
        vi.set_joint_target_velocities(jointnames, u);
        vi.trigger_next_simulation_step();

    }
}